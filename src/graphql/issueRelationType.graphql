fragment DefaultIssueRelationTypeInfo on IssueRelationType {
    id
    name
    description
}

query searchIssueRelationTypes($template: ID!, $query: String!, $count: Int!) {
    searchIssueRelationTypes(query: $query, first: $count, filter: { partOf: { any: { id: { eq: $template } } } }) {
        ...DefaultIssueRelationTypeInfo
    }
}

query firstIssueRelationTypes($template: ID!, $count: Int!) {
    node(id: $template) {
        ... on IssueTemplate {
            relationTypes(first: $count, orderBy: [{ field: NAME }]) {
                nodes {
                    ...DefaultIssueRelationTypeInfo
                }
            }
        }
    }
}

mutation changeIssueRelationType($issueRelation: ID!, $type: ID) {
    changeIssueRelationType(input: { issueRelation: $issueRelation, type: $type }) {
        outgoingRelationTypeChangedEvent {
            ...OutgoingRelationTypeChangedEventTimelineInfo
        }
    }
}
