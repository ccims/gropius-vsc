query firstComponentVersions($component: ID!, $count: Int!) {
    node(id: $component) {
        id
        ... on Component {
            versions(first: $count) {
                nodes {
                    ...DefaultComponentVersionInfo
                }
            }
        }
    }
}

query getComponentVersionList($orderBy: [ComponentVersionOrder!]!, $count: Int!, $skip: Int!, $component: ID!) {
    node(id: $component) {
        ... on Component {
            versions(orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    id
                    version
                    tags
                    interfaceDefinitions(filter: { visibleInterface: {} }) {
                        totalCount
                    }
                }
                totalCount
            }
        }
    }
}

query getFilteredComponentVersionList($query: String!, $count: Int!, $component: ID!) {
    searchComponentVersions(query: $query, first: $count, filter: { component: { id: { eq: $component } } }) {
        id
        version
        tags
        interfaceDefinitions(filter: { visibleInterface: {} }) {
            totalCount
        }
    }
}

fragment DefaultComponentVersionInfo on ComponentVersion {
    id
    component {
        name
        description
    }
    version
    __typename
}

query searchComponentVersions($query: String!, $count: Int!, $component: ID!) {
    searchComponentVersions(query: $query, first: $count, filter: { component: { id: { eq: $component } } }) {
        ...DefaultComponentVersionInfo
    }
}

query getComponentVersionGeneralDetails($id: ID!) {
    node(id: $id) {
        id
        ... on ComponentVersion {
            version
            tags
            templatedFields {
                name
                value
            }
            template {
                templateFieldSpecifications {
                    name
                    value
                }
            }
        }
    }
}

mutation createComponentVersion($input: CreateComponentVersionInput!) {
    createComponentVersion(input: $input) {
        componentVersion {
            id
        }
    }
}

mutation updateComponentVersion($input: UpdateComponentVersionInput!) {
    updateComponentVersion(input: $input) {
        componentVersion {
            id
        }
    }
}

mutation deleteComponentVersion($id: ID!) {
    deleteComponentVersion(input: { id: $id }) {
        __typename
    }
}
