fragment DefaultIMSInfo on IMS {
    id
    name
    description
}

query getIMSList($orderBy: [IMSOrder!]!, $count: Int!, $skip: Int!) {
    imss(orderBy: $orderBy, first: $count, skip: $skip) {
        nodes {
            ...DefaultSyncPermissionTargetInfo
        }
        totalCount
    }
}

query getFilteredIMSList($query: String!, $count: Int!) {
    searchIMSs(query: $query, first: $count) {
        ...DefaultSyncPermissionTargetInfo
    }
}

query getIMS($id: ID!) {
    node(id: $id) {
        id
        ...on IMS {
            name
            description
            syncTrackables: hasPermission(permission: SYNC_TRACKABLES)
            admin: hasPermission(permission: ADMIN)
        }
    }
}

query getIMSGeneralDetails($id: ID!) {
    node(id: $id) {
        id
        ...on IMS {
            name
            description
            templatedFields {
                name
                value
            }
            template {
                templateFieldSpecifications {
                    name
                    value
                }
            }
            admin: hasPermission(permission: ADMIN)
        }
    }
}

query searchIMSs($query: String!, $count: Int!, $filter: IMSFilterInput) {
    searchIMSs(query: $query, first: $count, filter: $filter) {
        ...DefaultIMSInfo
    }
}

query firstIMSs($count: Int!, $filter: IMSFilterInput) {
    imss(first: $count, filter: $filter) {
        nodes {
            ...DefaultIMSInfo
        }
    }
}

mutation createIMS($input: CreateIMSInput!) {
    createIMS(input: $input) {
        ims {
            id
        }
    }
}

mutation updateIMS($input: UpdateIMSInput!) {
    updateIMS(input: $input) {
        ims {
            id
        }
    }
}

mutation deleteIMS($id: ID!) {
    deleteIMS(input: { id: $id }) {
        __typename
    }
}