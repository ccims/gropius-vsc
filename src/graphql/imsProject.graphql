fragment DefaultIMSProjectInfo on IMSProject {
    id
    name
    description
    ims {
        id
        name
    }
    ...DefaultSyncPermissionTargetInfo
}

query getIMSProjectListFromIMS($orderBy: [IMSProjectOrder!]!, $count: Int!, $skip: Int!, $ims: ID!) {
    node(id: $ims) {
        ... on IMS {
            projects(orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    ...DefaultIMSProjectInfo
                }
                totalCount
            }
        }
    }
}

query getIMSProjectListFromTrackable($orderBy: [IMSProjectOrder!]!, $count: Int!, $skip: Int!, $trackable: ID!) {
    node(id: $trackable) {
        ... on Trackable {
            syncsTo(orderBy: $orderBy, first: $count, skip: $skip) {
                nodes {
                    ...DefaultIMSProjectInfo
                }
                totalCount
            }
        }
    }
}

query getFilteredIMSProjectList($query: String!, $count: Int!, $filter: IMSProjectFilterInput!) {
    searchIMSProjects(query: $query, first: $count, filter: $filter) {
        ...DefaultIMSProjectInfo
    }
}

query getIMSProjectGeneralDetails($id: ID!) {
    node(id: $id) {
        id
        ...on IMSProject {
            name
            description
            templatedFields {
                name
                value
            }
            template {
                templateFieldSpecifications {
                    name
                    value
                }
            }
            ims {
                syncTrackables: hasPermission(permission: SYNC_TRACKABLES)
            }
            trackable {
                manageIMS: hasPermission(permission: MANAGE_IMS)
            }
        }
    }
}

mutation createIMSProject($input: CreateIMSProjectInput!) {
    createIMSProject(input: $input) {
        imsProject {
            id
        }
    }
}

mutation updateIMSProject($input: UpdateIMSProjectInput!) {
    updateIMSProject(input: $input) {
        imsProject {
            id
        }
    }
}

mutation deleteIMSProject($id: ID!) {
    deleteIMSProject(input: { id: $id }) {
        __typename
    }
}